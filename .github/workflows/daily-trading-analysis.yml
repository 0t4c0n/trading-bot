# .github/workflows/daily-trading-analysis.yml
name: Minervini SEPA Analysis Diario

on:
  schedule:
    # Ejecutar Lunes a Viernes 5 horas despu√©s del cierre del mercado US
    # Mercado US: 9:30 AM - 4:00 PM EST = 14:30 - 20:00 UTC (horario est√°ndar)
    # Mercado US: 9:30 AM - 4:00 PM EDT = 13:30 - 19:00 UTC (horario de verano)
    - cron: '0 1 * * 2-6'   # 01:00 UTC = 5h despu√©s del cierre en horario est√°ndar (Martes-S√°bado UTC)
    - cron: '0 0 * * 2-6'   # 00:00 UTC = 5h despu√©s del cierre en horario de verano (Martes-S√°bado UTC)
  workflow_dispatch:  # Permitir ejecuci√≥n manual

# PERMISOS NECESARIOS PARA GITHUB PAGES
permissions:
  contents: read
  pages: write
  id-token: write

# Asegurar que solo un workflow corra a la vez
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  minervini-analysis:
    runs-on: ubuntu-latest
    timeout-minutes: 240  # 4 horas m√°ximo para an√°lisis Minervini completo
    
    # Configurar entorno para GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      
    - name: Configurar Python y cach√© de dependencias
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        
    - name: Instalar dependencias
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Ejecutar an√°lisis Minervini SEPA completo
      run: |
        echo "Iniciando an√°lisis Minervini SEPA de todas las acciones NYSE + NASDAQ..."
        echo "Sistema: 11 filtros (8 t√©cnicos + 3 fundamentales)"
        echo "Metodolog√≠a: SEPA de Mark Minervini"
        python script_automated.py
      env:
        PYTHONUNBUFFERED: 1  # Para ver output en tiempo real
        
    - name: Crear JSON para dashboard Minervini
      run: |
        echo "Generando dashboard Minervini con scoring system..."
        python create_dashboard_data.py
        
    - name: Verificar archivos generados
      id: verify_data_file
      run: |
        echo "Verificando la existencia y el contenido de docs/data.json..."
        if [ ! -f docs/data.json ] || [ $(stat -c%s docs/data.json) -lt 200 ]; then
          echo "::error::El archivo data.json no se gener√≥ correctamente o est√° casi vac√≠o."
          exit 1
        fi
        echo "‚úì El archivo data.json se gener√≥ correctamente. Tama√±o: $(stat -c%s docs/data.json) bytes."
    
    - name: Configurar Pages
      uses: actions/configure-pages@v4
      
    - name: Subir artefacto de Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'
        
    - name: Desplegar a GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Resumen final Minervini
      run: |
        echo "=== MINERVINI SEPA ANALYSIS COMPLETADO ==="
        echo "üéØ Metodolog√≠a: SEPA de Mark Minervini"
        echo "üìä Filtros aplicados: 11 (8 t√©cnicos + 3 fundamentales)"
        echo "üöÄ Dashboard disponible en: ${{ steps.deployment.outputs.page_url }}"
        echo "‚è∞ Pr√≥xima ejecuci√≥n: Ma√±ana a la misma hora"
        echo "üì± Optimizado para m√≥vil con Stage Analysis y RS Rating"